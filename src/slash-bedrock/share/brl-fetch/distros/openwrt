#!/bedrock/libexec/busybox sh
#
# OpenWrt bootstrap support
#
#      This program is free software; you can redistribute it and/or
#      modify it under the terms of the GNU General Public License
#      version 2 as published by the Free Software Foundation.
#
# Copyright (c) 2019 Daniel Thau <danthau@bedrocklinux.org>
#

. /bedrock/share/common-code
trap 'fetch_abort "Unexpected error occurred."' EXIT

check_supported() {
	false
}

speed_test_url() {
	echo "releases/${target_release:-}/targets/x86/64/sha256sums"
}

list_mirrors() {
	# main mirror
	echo 'https://downloads.openwrt.org'

	# additional mirrors
	mirror_list_url='https://openwrt.org/downloads'
	wget -O- "${mirror_list_url}" 2>/dev/null |
		awk '/id="mirrors"/,/<\/table>/' |
		list_links |
		grep "^http"
}

brl_arch_to_distro() {
	case "${1}" in
	"aarch64") echo "armvirt-64" ;;
	"armv7l") echo "armvirt-32" ;;
	"x86_64") echo "x86-64" ;;
	*) abort "brl does not know how to translate arch \"${1}\" to ${distro:-} format" ;;
	esac
}

list_architectures() {
	cat <<EOF
aarch64
armv7l
x86_64
EOF
}

default_release() {
	list_releases |
		sort -n |
		tail -n1
}

list_releases() {
	for mirror in "${flag_mirror:-}" $(list_mirrors); do
		if wget -O- "${mirror}/releases/" 2>/dev/null |
			list_links |
			grep '^[0-9][0-9.]*/$' |
			sed 's,/$,,'; then
			break
		fi
	done
}

fetch() {
	step "Downloading bootstrap software"

	case "${target_arch:-}" in
	"aarch64") url="$(find_link "${target_mirror:-}/releases/${target_release:-}/targets/armvirt/64/" "^openwrt-${target_release:-}-${distro_arch:-}-default-rootfs.tar.gz$")" ;;
	"armv7l") url="$(find_link "${target_mirror:-}/releases/${target_release:-}/targets/armvirt/32/" "^openwrt-${target_release:-}-${distro_arch:-}-default-rootfs.tar.gz$")" ;;
	"x86_64") url="$(find_link "${target_mirror:-}/releases/${target_release:-}/targets/x86/64/" "^openwrt-${target_release:-}-${distro_arch:-}-generic-rootfs.tar.gz$")" ;;
	esac

	wget -O "${target_dir:-}/rootfs.tar.gz" "${url}"

	step "Extracting bootstrap software"
	cp /bedrock/libexec/busybox "${target_dir:-}/busybox"
	chroot "${target_dir:-}" /busybox tar xf rootfs.tar.gz
	rm "${target_dir:-}/busybox"
	rm "${target_dir:-}/rootfs.tar.gz"

	step "Configuring"
	# OpenWrt defaults to /var being a symlink to /tmp.  This makes /var
	# shared on Bedrock when it should be private.  Disconnect /tmp from /var.
	if [ -h "${target_dir:-}/var" ]; then
		rm "${target_dir:-}/var"
	fi
	mkdir -p "${target_dir:-}/var/lock"
}
