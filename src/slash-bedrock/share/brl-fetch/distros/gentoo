#!/bedrock/libexec/busybox sh
#
# Gentoo Linux bootstrap support
#
#      This program is free software; you can redistribute it and/or
#      modify it under the terms of the GNU General Public License
#      version 2 as published by the Free Software Foundation.
#
# Copyright (c) 2016-2019 Daniel Thau <danthau@bedrocklinux.org>
#

. /bedrock/share/common-code
trap 'fetch_abort "Unexpected error occurred."' EXIT

check_supported() {
	true
}

speed_test_url() {
	echo "releases/verify-digests.sh"
}

list_mirrors() {
	mirror_list_url="https://www.gentoo.org/downloads/mirrors/"
	wget -O- "${mirror_list_url}" 2>/dev/null |
		awk '/Region/,/<footer>/' |
		list_links |
		grep "^http"
}

brl_arch_to_distro() {
	case "${1}" in
	"armv7hl") echo "armv7a_hardfp" ;;
	"armv7l") echo "armv7a" ;;
	"ppc64le") echo "ppc64le" ;;
	"s390x") echo "s3960x" ;;
	"x86_64") echo "amd64" ;;
	*) abort "brl does not know how to translate arch \"${1}\" to ${distro:-} format" ;;
	esac
}

list_architectures() {
	cat <<EOF
armv7hl
armv7l
ppc64le
s390x
x86_64
EOF
}

default_release() {
	echo "rolling"
}

list_releases() {
	echo "rolling"
}

fetch() {
	step "Finding bootstrap software"
	groups="$(wget -O- "${target_mirror:-}/releases/" 2>/dev/null |
		list_links |
		grep '/$' |
		sed -e 's,/$,,')"
	group="$(for group in ${groups}; do
		if wget -O- "${target_mirror:-}/releases/${group}/autobuilds/" 2>/dev/null |
			list_links |
			grep "^current-stage3-${distro_arch:-}/$" >/dev/null; then
			echo "${group}"
			break
		fi
	done)"
	if [ -z "${group}" ]; then
		abort "Could not find bootstrap software at ${target_mirror:-} for ${distro_arch:-}."
	fi

	step "Downloading bootstrap software"
	url="$(find_link "${target_mirror:-}/releases/${group}/autobuilds/current-stage3-${distro_arch:-}/" "^stage3-${distro_arch:-}-[^.]*[.]tar[.]\(xz\|bz2\)$")"
	(
		cd "${bootstrap_dir:-}"
		wget "${url}"
	)

	step "Preparing bootstrap software"
	(
		cd "${bootstrap_dir:-}"
		tar xf "stage3-${distro_arch:-}"-*
	)

	step "Running bootstrap software"
	setup_chroot "${bootstrap_dir:-}"
	chroot "${bootstrap_dir:-}" sh -c "cd /target-root && tar xpf /stage3-${distro_arch:-}-* --xattrs-include='*.*' --numeric-owner"

	step "Configuring"
	setup_chroot "${target_dir:-}"
	echo "GENTOO_MIRRORS=\"${target_mirror:-}\"" >>"${target_dir:-}/etc/portage/make.conf"
	mkdir -p "${target_dir:-}/etc/portage/repos.conf"
	cp "${target_dir:-}/usr/share/portage/config/repos.conf" "${target_dir:-}/etc/portage/repos.conf/gentoo.conf"
	LC_ALL=C chroot "${target_dir:-}" emerge-webrsync
}
